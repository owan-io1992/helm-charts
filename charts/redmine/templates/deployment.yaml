apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redmine.fullname" . }}
  labels:
    {{- include "redmine.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "redmine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ toJson .Values.redmine.config | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redmine.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redmine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: redmine-files
          persistentVolumeClaim:
            claimName: {{ template "redmine.fullname" . }}-files
        - name: redmine-configs
          persistentVolumeClaim:
            claimName: {{ template "redmine.fullname" . }}-configs
        - name: redmine-configmap
          configMap:
            name: {{ include "redmine.fullname" . }}-configmap
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ template "redmine.fullname" . }}-database
            - secretRef:
                name: {{ template "redmine.fullname" . }}-secrets
          volumeMounts:
            - name: redmine-files
              mountPath: /usr/src/redmine/files
            - name: redmine-configs
              mountPath: /usr/src/redmine/config

      initContainers:
      # because configmap os read-only
      # but redmine need cahnge permission
      # so need use initContainers to copy config to pvc, then mount to redmine 
      - name: {{ .Chart.Name }}-init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['bash', '-c', 'cp -rf /usr/src/redmine/config/* /config && cp -f /configuration.yml /config/configuration.yml']
        volumeMounts:
        - name: redmine-configs
          mountPath: "/config"
        - name: redmine-configmap
          mountPath: "/configuration.yml"
          subPath: configuration.yml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
