# -- Number of replicas
replicaCount: 1

## Image configuration
image:
  # -- Image repository
  repository: nginx
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- Image pull secrets
imagePullSecrets: []
# -- Override the chart name
nameOverride: ""
# -- Override the full name
fullnameOverride: ""

## Service account configuration
serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for the pod
podAnnotations: {}
# -- Labels for the pod
podLabels: {}

# -- Pod security context
# e.g.
# fsGroup: 2000
podSecurityContext: {}

# -- Container security context
# e.g.
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000
securityContext: {}

## Service configuration
service:
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 80

# -- Resource requests and limits
# e.g.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi
resources: {}

# -- Liveness probe configuration
livenessProbe:
  httpGet:
    path: /health
    port: http
# -- Readiness probe configuration
readinessProbe:
  httpGet:
    path: /health
    port: http

# -- Volumes to mount
volumes:
  - name: config
    configMap:
      name: '{{ include "lens-metric-proxy.fullname" . }}'

# -- Volume mounts for the container
volumeMounts:
  - name: config
    mountPath: /etc/nginx/nginx.conf
    subPath: nginx.conf
  - name: config
    mountPath: /etc/nginx/templates/prometheus.conf.template
    subPath: prometheus.conf.template

# -- Node selector for pod assignment
nodeSelector: {}

# -- Tolerations for pod assignment
tolerations: []

# -- Affinity for pod assignment
affinity: {}

## ConfigMap configuration
config:
  # -- Main nginx configuration
  nginx_conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" "$request_body"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }

  # -- Prometheus proxy configuration template for nginx
  prometheus_conf_template: |
    server {
        listen 80 default_server;

        proxy_connect_timeout       300;
        proxy_send_timeout          300;
        proxy_read_timeout          300;
        send_timeout                300;
        resolver 1.1.1.1;
        location /health {
            return 200;
        }
        location / {
            proxy_pass http://$PROMETHEUS_HOST/prometheus$request_uri;
            # proxy_set_header X-Scope-OrgID "$MIMIR_TENANT";
        }

    }

## Environment variables for the container
env:
  # -- The host of the prometheus backend
  - name: "PROMETHEUS_HOST"
    value: ""
  # -- The tenant id for mimir
  # - name: "MIMIR_TENANT"
  #   value: ""
